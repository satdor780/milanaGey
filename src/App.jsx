import React, { useState } from 'react';
import './App.css';

function App() {
  const questions = [
    {
      id: 1,
      question: 'Какой год принятия Конституции? ',
      answer: '1992 год',
    },
    {
      id: 2,
      question: 'Какой документ является основным законом страны?',
      answer: 'Конституция Республики Узбекиста',
    },
    {
      id: 3,
      question: 'Сколько разделов в Конституции? ',
      answer: '6 разделов',
    },
    {
      id: 4,
      question: 'Какой орган власти является высшим в стране? ',
      answer: 'Олий Мажлис (парламент)',
    },
    {
      id: 5,
      question: 'Каков срок полномочий президента? ',
      answer: '5 лет.',
    },
    {
      id: 6,
      question: 'Кто имеет право на свободный доступ к информации?',
      answer: 'Каждый гражданин',
    },
    {
      id: 7,
      question: 'Какой государственный язык установлен Конституцией? ',
      answer: 'Узбекский язык.',
    },
    {
      id: 8,
      question: 'Как называется статья, защищающая права человека? ',
      answer: 'Глава о правах и обязанностях граждан.',
    },
    {
      id: 9,
      question: 'Кто утверждает изменения в Конституцию? ',
      answer: 'Олий Мажлис.',
    },
    {
      id: 10,
      question: 'Какова роль правоохранительных органов?',
      answer: 'Защита прав и свобод граждан.',
    },
  ];

  const [activeQuestionId, setActiveQuestionId] = useState(null);
  const [modalContent, setModalContent] = useState(null);

  const handleQuestionClick = (id) => {
    if (activeQuestionId === id) {
      setActiveQuestionId(null);
    } else {
      setActiveQuestionId(id); 
    }
  };

  const handleShowAnswer = (answer) => {
    setModalContent(answer); 
  };

  const handleCloseModal = () => {
    setModalContent(null); 
  };

  return (
    <>


      <h1>pizda !</h1>

      <div className="tests">
        {questions.map((q) => (
          <div className="question" key={q.id}>
            <div className="question__icon" onClick={() => handleQuestionClick(q.id)}>
              {activeQuestionId === q.id ? (
                <span>{q.question}</span>
              ) : (
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="-0.5 -0.5 24 24" id="Question-Mark--Streamline-Sharp-Material-Symbols" height="24" width="24"><desc>Question Mark Streamline Icon: https://streamlinehq.com</desc><path fill="#000000" d="M10.3261375 15.09375c0.01595625 -1.15 0.14772708333333334 -1.9885416666666669 0.3953125 -2.515625 0.2475854166666667 -0.5270833333333333 0.7147729166666668 -1.1020833333333333 1.4015625 -1.725 0.6708333333333333 -0.6069604166666667 1.1859375 -1.16998125 1.5453125 -1.6890625000000001s0.5390625 -1.0741479166666665 0.5390625 -1.6651041666666668c0 -0.71875 -0.23958333333333334 -1.3177083333333335 -0.71875 -1.796875s-1.15 -0.71875 -2.0125 -0.71875c-0.8305395833333334 0 -1.4694604166666667 0.23560625000000002 -1.9166666666666667 0.7067708333333333 -0.44720625 0.47116458333333333 -0.77466875 0.9623104166666668 -0.9822916666666667 1.4734375000000002l-2.0125 -0.8864583333333335c0.35137291666666665 -0.9423770833333334 0.9463541666666667 -1.744966875 1.7848958333333333 -2.4078125000000004C9.188116666666668 3.2064252083333336 10.230304166666668 2.875 11.4761375 2.875c1.59720625 0 2.8270833333333334 0.44322916666666673 3.6895833333333337 1.3296875 0.8625 0.8864583333333335 1.2937500000000002 1.952604166666667 1.2937500000000002 3.1984375 0 0.7666666666666667 -0.16373125 1.4614583333333333 -0.49114583333333334 2.084375 -0.32741458333333334 0.6229166666666667 -0.8505208333333333 1.27779375 -1.5692708333333334 1.9645833333333333 -0.7826229166666667 0.7507104166666667 -1.2538354166666665 1.325710416666667 -1.4135416666666667 1.725 -0.15970625 0.39928958333333336 -0.2475854166666667 1.0382104166666668 -0.2635416666666667 1.9166666666666667h-2.3958333333333335Zm1.15 5.989583333333334c-0.4632104166666667 0 -0.8585229166666667 -0.16373125 -1.1859375 -0.49114583333333334 -0.32741458333333334 -0.32741458333333334 -0.49114583333333334 -0.7227270833333334 -0.49114583333333334 -1.1859375 0 -0.4632104166666667 0.16373125 -0.8585229166666667 0.49114583333333334 -1.1859375 0.32741458333333334 -0.32741458333333334 0.7227270833333334 -0.49114583333333334 1.1859375 -0.49114583333333334 0.4632104166666667 0 0.8585229166666667 0.16373125 1.1859375 0.49114583333333334 0.32741458333333334 0.32741458333333334 0.49114583333333334 0.7227270833333334 0.49114583333333334 1.1859375 0 0.4632104166666667 -0.16373125 0.8585229166666667 -0.49114583333333334 1.1859375 -0.32741458333333334 0.32741458333333334 -0.7227270833333334 0.49114583333333334 -1.1859375 0.49114583333333334Z" stroke-width="1"></path></svg>
              )}
            </div>
            <div className="answer">
              <button onClick={() => handleShowAnswer(q.answer)}>Посмотреть ответ</button>
            </div>
          </div>
        ))}
      </div>

      {modalContent && (
        <div className="modal">
          <div className="modal-content">
            <span className="close" onClick={handleCloseModal}>&times;</span>
            <p>{modalContent}</p>
          </div>
        </div>
      )}
    </>
  );
}

export default App;

